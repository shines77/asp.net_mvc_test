//------------------------------------------------------------------------------
// <auto-generated>
//    此代码是根据模板生成的。
//
//    手动更改此文件可能会导致应用程序中发生异常行为。
//    如果重新生成代码，则将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;
using lolobcn.Depends;

//[assembly: EdmSchemaAttribute()]

namespace lolobcn.Models
{
    #region 上下文
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    public partial class LolObDBModels2 : MySqlDBHelper
    {
        //private static MySqlDBHelper dbHelper = new MySqlDBHelper("name=LocalMySqlServices");
        //private static MySqlDBHelper dbHelper = new MySqlDBHelper("server=localhost; port=3306; database=lolobcn_net; uid=root; pwd=gxh201100;",
        //                                                            MySqlDBHelper.ConnectionMode.BY_STRING);

        #region 构造函数

        /// <summary>
        /// 请使用应用程序配置文件的“LocalMySqlServices”部分中的连接字符串初始化新 LolObDBModels2 对象。
        /// </summary>
        public LolObDBModels2() : base("name=LocalMySqlServices")
        {
            //
        }

        /// <summary>
        /// 请使用应用程序配置文件的“LocalMySqlServices”部分中的连接字符串初始化新 LolObDBModels2 对象。
        /// </summary>
        public LolObDBModels2(string connStringName) : base(connStringName)
        {
            //
        }

        /// <summary>
        /// 请使用应用程序配置文件的“LocalMySqlServices”部分中的连接字符串初始化新 LolObDBModels2 对象。
        /// </summary>
        public LolObDBModels2(string connString, ConnectionMode connMode) : base(connString, connMode)
        {
            //
        }

        #endregion
    }

    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    public partial class LolObDBModelsEx2 : MySqlDBHelperEx
    {
        //private static MySqlDBHelper dbHelper = new MySqlDBHelper("name=LocalMySqlServices");
        //private static MySqlDBHelper dbHelper = new MySqlDBHelper("server=localhost; port=3306; database=lolobcn_net; uid=root; pwd=gxh201100;",
        //                                                            MySqlDBHelper.ConnectionMode.BY_STRING);

        #region 构造函数

        /// <summary>
        /// 请使用应用程序配置文件的“LocalMySqlServices”部分中的连接字符串初始化新 LolObDBModelsEx2 对象。
        /// </summary>
        public LolObDBModelsEx2()
            : base("name=LocalMySqlServices")
        {
            //
        }

        /// <summary>
        /// 请使用应用程序配置文件的“LocalMySqlServices”部分中的连接字符串初始化新 LolObDBModelsEx2 对象。
        /// </summary>
        public LolObDBModelsEx2(string connStringName)
            : base(connStringName)
        {
            //
        }

        /// <summary>
        /// 请使用应用程序配置文件的“LocalMySqlServices”部分中的连接字符串初始化新 LolObDBModelsEx2 对象。
        /// </summary>
        public LolObDBModelsEx2(string connString, ConnectionMode connMode)
            : base(connString, connMode)
        {
            //
        }

        #endregion
    }

    #endregion
    
    #region 实体
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "LolObDBModels2", Name = "MatchinfoTable2")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MatchinfoTable2 : EntityObject
    {
        #region 数据库连接信息

        /// <summary>
        /// 在这里定义MatchinfoTable2对象所对应的数据库查询sql语句
        /// </summary>
        public static string strSQL = "select id, serverId, serverName, serverIp, gameId from matchinfo";
        //public static string strSQL = "select * from matchinfo";

        #endregion

        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Matchinfo 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        /// <param name="serverId">ServerId 属性的初始值。</param>
        /// <param name="serverName">ServerName 属性的初始值。</param>
        /// <param name="serverIp">ServerIp 属性的初始值。</param>
        /// <param name="gameId">GameId 属性的初始值。</param>
        public static MatchinfoTable2 CreateMatchinfoTable2(global::System.UInt32 id, global::System.UInt32 serverId, global::System.String serverName, global::System.String serverIp, global::System.UInt32 gameId)
        {
            MatchinfoTable2 matchinfo = new MatchinfoTable2();
            matchinfo.Id = id;
            matchinfo.ServerId = serverId;
            matchinfo.ServerName = serverName;
            matchinfo.ServerIp = serverIp;
            matchinfo.GameId = gameId;
            return matchinfo;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.UInt32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.UInt32 _Id;
        partial void OnIdChanging(global::System.UInt32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.UInt32 ServerId
        {
            get
            {
                return _ServerId;
            }
            set
            {
                OnServerIdChanging(value);
                ReportPropertyChanging("ServerId");
                _ServerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ServerId");
                OnServerIdChanged();
            }
        }
        private global::System.UInt32 _ServerId;
        partial void OnServerIdChanging(global::System.UInt32 value);
        partial void OnServerIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ServerName
        {
            get
            {
                return _ServerName;
            }
            set
            {
                OnServerNameChanging(value);
                ReportPropertyChanging("ServerName");
                _ServerName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ServerName");
                OnServerNameChanged();
            }
        }
        private global::System.String _ServerName;
        partial void OnServerNameChanging(global::System.String value);
        partial void OnServerNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ServerIp
        {
            get
            {
                return _ServerIp;
            }
            set
            {
                OnServerIpChanging(value);
                ReportPropertyChanging("ServerIp");
                _ServerIp = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ServerIp");
                OnServerIpChanged();
            }
        }
        private global::System.String _ServerIp;
        partial void OnServerIpChanging(global::System.String value);
        partial void OnServerIpChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.UInt32 GameId
        {
            get
            {
                return _GameId;
            }
            set
            {
                OnGameIdChanging(value);
                ReportPropertyChanging("GameId");
                _GameId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GameId");
                OnGameIdChanged();
            }
        }
        private global::System.UInt32 _GameId;
        partial void OnGameIdChanging(global::System.UInt32 value);
        partial void OnGameIdChanged();

        #endregion
    
    }

    #endregion
    
}

//------------------------------------------------------------------------------
// <auto-generated>
//    此代码是根据模板生成的。
//
//    手动更改此文件可能会导致应用程序中发生异常行为。
//    如果重新生成代码，则将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]

namespace lolobcn.Models
{
    #region 上下文
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    public partial class masterEntities : ObjectContext
    {
        #region 构造函数
    
        /// <summary>
        /// 请使用应用程序配置文件的“masterEntities”部分中的连接字符串初始化新 masterEntities 对象。
        /// </summary>
        public masterEntities() : base("name=masterEntities", "masterEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 masterEntities 对象。
        /// </summary>
        public masterEntities(string connectionString) : base(connectionString, "masterEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 masterEntities 对象。
        /// </summary>
        public masterEntities(EntityConnection connection) : base(connection, "masterEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region 分部方法
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet 属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<spt_monitor> spt_monitor
        {
            get
            {
                if ((_spt_monitor == null))
                {
                    _spt_monitor = base.CreateObjectSet<spt_monitor>("spt_monitor");
                }
                return _spt_monitor;
            }
        }
        private ObjectSet<spt_monitor> _spt_monitor;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<spt_values> spt_values
        {
            get
            {
                if ((_spt_values == null))
                {
                    _spt_values = base.CreateObjectSet<spt_values>("spt_values");
                }
                return _spt_values;
            }
        }
        private ObjectSet<spt_values> _spt_values;

        #endregion
        #region AddTo 方法
    
        /// <summary>
        /// 用于向 spt_monitor EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTospt_monitor(spt_monitor spt_monitor)
        {
            base.AddObject("spt_monitor", spt_monitor);
        }
    
        /// <summary>
        /// 用于向 spt_values EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTospt_values(spt_values spt_values)
        {
            base.AddObject("spt_values", spt_values);
        }

        #endregion
    }
    

    #endregion
    
    #region 实体
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="masterModel", Name="spt_monitor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class spt_monitor : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 spt_monitor 对象。
        /// </summary>
        /// <param name="lastrun">lastrun 属性的初始值。</param>
        /// <param name="cpu_busy">cpu_busy 属性的初始值。</param>
        /// <param name="io_busy">io_busy 属性的初始值。</param>
        /// <param name="idle">idle 属性的初始值。</param>
        /// <param name="pack_received">pack_received 属性的初始值。</param>
        /// <param name="pack_sent">pack_sent 属性的初始值。</param>
        /// <param name="connections">connections 属性的初始值。</param>
        /// <param name="pack_errors">pack_errors 属性的初始值。</param>
        /// <param name="total_read">total_read 属性的初始值。</param>
        /// <param name="total_write">total_write 属性的初始值。</param>
        /// <param name="total_errors">total_errors 属性的初始值。</param>
        public static spt_monitor Createspt_monitor(global::System.DateTime lastrun, global::System.Int32 cpu_busy, global::System.Int32 io_busy, global::System.Int32 idle, global::System.Int32 pack_received, global::System.Int32 pack_sent, global::System.Int32 connections, global::System.Int32 pack_errors, global::System.Int32 total_read, global::System.Int32 total_write, global::System.Int32 total_errors)
        {
            spt_monitor spt_monitor = new spt_monitor();
            spt_monitor.lastrun = lastrun;
            spt_monitor.cpu_busy = cpu_busy;
            spt_monitor.io_busy = io_busy;
            spt_monitor.idle = idle;
            spt_monitor.pack_received = pack_received;
            spt_monitor.pack_sent = pack_sent;
            spt_monitor.connections = connections;
            spt_monitor.pack_errors = pack_errors;
            spt_monitor.total_read = total_read;
            spt_monitor.total_write = total_write;
            spt_monitor.total_errors = total_errors;
            return spt_monitor;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime lastrun
        {
            get
            {
                return _lastrun;
            }
            set
            {
                if (_lastrun != value)
                {
                    OnlastrunChanging(value);
                    ReportPropertyChanging("lastrun");
                    _lastrun = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("lastrun");
                    OnlastrunChanged();
                }
            }
        }
        private global::System.DateTime _lastrun;
        partial void OnlastrunChanging(global::System.DateTime value);
        partial void OnlastrunChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 cpu_busy
        {
            get
            {
                return _cpu_busy;
            }
            set
            {
                if (_cpu_busy != value)
                {
                    Oncpu_busyChanging(value);
                    ReportPropertyChanging("cpu_busy");
                    _cpu_busy = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("cpu_busy");
                    Oncpu_busyChanged();
                }
            }
        }
        private global::System.Int32 _cpu_busy;
        partial void Oncpu_busyChanging(global::System.Int32 value);
        partial void Oncpu_busyChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 io_busy
        {
            get
            {
                return _io_busy;
            }
            set
            {
                if (_io_busy != value)
                {
                    Onio_busyChanging(value);
                    ReportPropertyChanging("io_busy");
                    _io_busy = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("io_busy");
                    Onio_busyChanged();
                }
            }
        }
        private global::System.Int32 _io_busy;
        partial void Onio_busyChanging(global::System.Int32 value);
        partial void Onio_busyChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idle
        {
            get
            {
                return _idle;
            }
            set
            {
                if (_idle != value)
                {
                    OnidleChanging(value);
                    ReportPropertyChanging("idle");
                    _idle = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("idle");
                    OnidleChanged();
                }
            }
        }
        private global::System.Int32 _idle;
        partial void OnidleChanging(global::System.Int32 value);
        partial void OnidleChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 pack_received
        {
            get
            {
                return _pack_received;
            }
            set
            {
                if (_pack_received != value)
                {
                    Onpack_receivedChanging(value);
                    ReportPropertyChanging("pack_received");
                    _pack_received = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("pack_received");
                    Onpack_receivedChanged();
                }
            }
        }
        private global::System.Int32 _pack_received;
        partial void Onpack_receivedChanging(global::System.Int32 value);
        partial void Onpack_receivedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 pack_sent
        {
            get
            {
                return _pack_sent;
            }
            set
            {
                if (_pack_sent != value)
                {
                    Onpack_sentChanging(value);
                    ReportPropertyChanging("pack_sent");
                    _pack_sent = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("pack_sent");
                    Onpack_sentChanged();
                }
            }
        }
        private global::System.Int32 _pack_sent;
        partial void Onpack_sentChanging(global::System.Int32 value);
        partial void Onpack_sentChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 connections
        {
            get
            {
                return _connections;
            }
            set
            {
                if (_connections != value)
                {
                    OnconnectionsChanging(value);
                    ReportPropertyChanging("connections");
                    _connections = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("connections");
                    OnconnectionsChanged();
                }
            }
        }
        private global::System.Int32 _connections;
        partial void OnconnectionsChanging(global::System.Int32 value);
        partial void OnconnectionsChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 pack_errors
        {
            get
            {
                return _pack_errors;
            }
            set
            {
                if (_pack_errors != value)
                {
                    Onpack_errorsChanging(value);
                    ReportPropertyChanging("pack_errors");
                    _pack_errors = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("pack_errors");
                    Onpack_errorsChanged();
                }
            }
        }
        private global::System.Int32 _pack_errors;
        partial void Onpack_errorsChanging(global::System.Int32 value);
        partial void Onpack_errorsChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 total_read
        {
            get
            {
                return _total_read;
            }
            set
            {
                if (_total_read != value)
                {
                    Ontotal_readChanging(value);
                    ReportPropertyChanging("total_read");
                    _total_read = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("total_read");
                    Ontotal_readChanged();
                }
            }
        }
        private global::System.Int32 _total_read;
        partial void Ontotal_readChanging(global::System.Int32 value);
        partial void Ontotal_readChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 total_write
        {
            get
            {
                return _total_write;
            }
            set
            {
                if (_total_write != value)
                {
                    Ontotal_writeChanging(value);
                    ReportPropertyChanging("total_write");
                    _total_write = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("total_write");
                    Ontotal_writeChanged();
                }
            }
        }
        private global::System.Int32 _total_write;
        partial void Ontotal_writeChanging(global::System.Int32 value);
        partial void Ontotal_writeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 total_errors
        {
            get
            {
                return _total_errors;
            }
            set
            {
                if (_total_errors != value)
                {
                    Ontotal_errorsChanging(value);
                    ReportPropertyChanging("total_errors");
                    _total_errors = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("total_errors");
                    Ontotal_errorsChanged();
                }
            }
        }
        private global::System.Int32 _total_errors;
        partial void Ontotal_errorsChanging(global::System.Int32 value);
        partial void Ontotal_errorsChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="masterModel", Name="spt_values")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class spt_values : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 spt_values 对象。
        /// </summary>
        /// <param name="number">number 属性的初始值。</param>
        /// <param name="type">type 属性的初始值。</param>
        public static spt_values Createspt_values(global::System.Int32 number, global::System.String type)
        {
            spt_values spt_values = new spt_values();
            spt_values.number = number;
            spt_values.type = type;
            return spt_values;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 number
        {
            get
            {
                return _number;
            }
            set
            {
                if (_number != value)
                {
                    OnnumberChanging(value);
                    ReportPropertyChanging("number");
                    _number = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("number");
                    OnnumberChanged();
                }
            }
        }
        private global::System.Int32 _number;
        partial void OnnumberChanging(global::System.Int32 value);
        partial void OnnumberChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String type
        {
            get
            {
                return _type;
            }
            set
            {
                if (_type != value)
                {
                    OntypeChanging(value);
                    ReportPropertyChanging("type");
                    _type = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("type");
                    OntypeChanged();
                }
            }
        }
        private global::System.String _type;
        partial void OntypeChanging(global::System.String value);
        partial void OntypeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> low
        {
            get
            {
                return _low;
            }
            set
            {
                OnlowChanging(value);
                ReportPropertyChanging("low");
                _low = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("low");
                OnlowChanged();
            }
        }
        private Nullable<global::System.Int32> _low;
        partial void OnlowChanging(Nullable<global::System.Int32> value);
        partial void OnlowChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> high
        {
            get
            {
                return _high;
            }
            set
            {
                OnhighChanging(value);
                ReportPropertyChanging("high");
                _high = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("high");
                OnhighChanged();
            }
        }
        private Nullable<global::System.Int32> _high;
        partial void OnhighChanging(Nullable<global::System.Int32> value);
        partial void OnhighChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> status
        {
            get
            {
                return _status;
            }
            set
            {
                OnstatusChanging(value);
                ReportPropertyChanging("status");
                _status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("status");
                OnstatusChanged();
            }
        }
        private Nullable<global::System.Int32> _status;
        partial void OnstatusChanging(Nullable<global::System.Int32> value);
        partial void OnstatusChanged();

        #endregion
    
    }

    #endregion
    
}
